name: Run visual testing

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

jobs:
  visual-testing:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'visual-testing') || startsWith(github.head_ref, 'renovate/') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v5

      - name: Get Cloudflare Pages preview URL
        id: wait-for-cloudflare-preview
        uses: mr-wildcard/action-get-cloudflare-branch-preview-url@v1
        with:
          cloudflare-account-id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-pages-project: yuna-work
          branch-name: ${{ github.head_ref }}

      - uses: pnpm/action-setup@v4
        if: steps.wait-for-cloudflare-preview.outputs.status == 'success'

      - name: Setup Node
        if: steps.wait-for-cloudflare-preview.outputs.status == 'success'
        uses: actions/setup-node@v6
        with:
          node-version-file: .nvmrc
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install
        if: steps.wait-for-cloudflare-preview.outputs.status == 'success'
        run: pnpm i

      - name: Take yuna.work screenshots and upload them to Percy
        if: steps.wait-for-cloudflare-preview.outputs.status == 'success'
        run: pnpm percy snapshot .percy.mjs --verbose
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          CLOUDFLARE_PREVIEW_URL: ${{ env.CF_PREVIEW_HASH_URL }}
