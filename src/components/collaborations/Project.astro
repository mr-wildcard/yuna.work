---
import { type ImageMetadata } from "astro";
import { Picture } from "astro:assets";
import Grid from "../@common/Grid.astro";
import Icon from "../@common/Icon.astro";
import Tag from "../@common/Tag.astro";
import ProjectTestimonial, {
  type Props as Testimonial,
} from "./ProjectTestimonial.astro";

interface Props {
  screenshot: ImageMetadata;
  title: string;
  tags: string[];
  testimonials?: Testimonial[];
  isOngoing?: boolean;
}

const { screenshot, tags, isOngoing, testimonials = [], title } = Astro.props;

const [firstTestimonial, ...otherTestimonials] = testimonials;
---

<Grid as="div" class="lg:grid-rows-[auto_1fr]">
  <div
    class="col-span-full sm:col-span-7 lg:row-span-full lg:col-start-2 lg:col-span-4 xl:col-start-3"
  >
    <div class="relative mb-[30px] lg:mb-0">
      {
        isOngoing ? (
          <div class="absolute top-[8px] left-[7px]">
            <span class="text-tag-label-highlight bg-neutral1 py-[3px] px-2.5 rounded-[7px]">
              Mission en cours
            </span>
          </div>
        ) : null
      }

      <Picture class="rounded-[15px]" src={screenshot} alt="" />
    </div>
  </div>

  <div class="col-span-full sm:col-span-7 xl:col-span-6">
    <h3 set:html={title} class="text-display-small mb-5" />

    <ul class="-m-[5px]">
      {
        tags.map((tag) => (
          <li class="inline-block m-[5px]">
            <Tag text={tag} />
          </li>
        ))
      }
    </ul>
  </div>

  {
    firstTestimonial ? (
      <div class="col-span-full sm:col-span-7 md:col-span-6">
        <div class="mt-[30px] lg:mt-[50px]">
          <ProjectTestimonial
            quote={firstTestimonial.quote}
            author={firstTestimonial.author}
            lang={firstTestimonial.lang}
          />
        </div>

        {otherTestimonials.length > 0 ? (
          <details class="mt-[30px] lg:mt-[50px]">
            <summary class="w-fit rounded-full border-primary border-2 hover:bg-neutral3">
              <span class="flex items-center px-5 py-2 space-x-[10px]">
                <span class="text-menu-label-highlight">
                  Voir plus de t√©moignages
                </span>
                <span class="flex items-center justify-center w-[22px] h-[22px]">
                  <Icon name="chevron_down" width={12} height={7} />
                </span>
              </span>
            </summary>
            <ul class="mt-10 space-y-10">
              {otherTestimonials.map((testimonial) => (
                <li>
                  <ProjectTestimonial
                    author={testimonial.author}
                    quote={testimonial.quote}
                    lang={testimonial.lang}
                  />
                </li>
              ))}
            </ul>
          </details>
        ) : null}
      </div>
    ) : null
  }
</Grid>

<style>
  details {
    &[open] {
      summary svg {
        transform: scaleY(-1);
      }
    }
  }

  summary {
    cursor: pointer;
    user-select: none;
    list-style: none;

    &::-webkit-details-marker {
      display: none;
    }
  }
</style>
