---
import { type ImageMetadata } from "astro";
import { Picture } from "astro:assets";
import Grid from "../@common/Grid.astro";
import Icon from "../@common/Icon.astro";
import Tag from "../@common/Tag.astro";
import ProjectTestimonial, {
  type Props as Testimonial,
} from "./ProjectTestimonial.astro";

interface Props {
  screenshot: ImageMetadata;
  title: string;
  tags: string[];
  testimonials?: Testimonial[];
  isOngoing?: boolean;
}

const { screenshot, tags, isOngoing, testimonials = [], title } = Astro.props;

const [firstTestimonial, ...otherTestimonials] = testimonials;
---

<Grid as="div">
  <div class="col-span-full">
    <div class="mb-[30px] relative">
      {
        isOngoing ? (
          <div class="absolute top-[12px] left-[9px]">
            <span class="text-tag-label-highlight bg-neutral1 py-[3px] px-2.5 rounded-[10px]">
              Mission en cours
            </span>
          </div>
        ) : null
      }

      <Picture src={screenshot} alt="" />
    </div>

    <h3 class="text-display-small mb-5">
      {title}
    </h3>

    <ul class="-m-[5px]">
      {
        tags.map((tag) => (
          <li class="inline-block m-[5px]">
            <Tag text={tag} />
          </li>
        ))
      }
    </ul>

    {
      firstTestimonial ? (
        <div class="mt-[30px]">
          <ProjectTestimonial
            quote={firstTestimonial.quote}
            author={firstTestimonial.author}
            lang={firstTestimonial.lang}
          />
        </div>
      ) : null
    }

    {
      otherTestimonials.length > 0 ? (
        <details class="mt-[30px]">
          <summary class="w-fit flex items-center px-5 py-2 space-x-[10px] rounded-full border-primary border-2">
            <span class="text-menu-label-highlight">
              Déplier plus de témoignages
            </span>
            <span class="flex items-center justify-center w-[22px] h-[22px]">
              <Icon name="chevron_down" width={10} height={6} />
            </span>
          </summary>
          <ul class="mt-[30px] space-y-[30px]">
            {otherTestimonials.map((testimonial) => (
              <li>
                <ProjectTestimonial
                  author={testimonial.author}
                  quote={testimonial.quote}
                  lang={testimonial.lang}
                />
              </li>
            ))}
          </ul>
        </details>
      ) : null
    }
  </div>
</Grid>

<style>
  details {
    &[open] {
      summary :global(svg) {
        transform: scaleY(-1);
      }
    }
  }

  summary {
    user-select: none;
    list-style: none;

    &::-webkit-details-marker {
      display: none;
    }
  }
</style>
