---
const { pathname } = Astro.url;

interface Props {
  to: string;
  class?: string;
}

const { to, class: cssClasses = [] } = Astro.props;

const isSelected = pathname.replaceAll("/", "") === to?.replaceAll("/", "");

const HTMLTag = isSelected ? "span" : "a";

const basicCSSClasses = [
  "py-2",
  "px-4",
  "inline-block",
  "text-body-normal",
  "rounded-full",
];

const selectedCSSClasses = [
  "after:absolute",
  "after:left-0",
  "after:block",
  "after:w-full",
  "after:h-[3px]",
  "after:rounded-full",
  "after:bg-primary",
];

const unselectedCSSClasses = [
  "underline",
  "underline-offset-2",
  "hover:no-underline",
  "hover:bg-neutral3",
];
---

<HTMLTag
  href={!isSelected ? to : undefined}
  class:list={[
    ...basicCSSClasses,
    ...cssClasses,
    !isSelected ? unselectedCSSClasses : undefined,
  ]}
>
  <span class:list={["relative", isSelected ? selectedCSSClasses : undefined]}>
    <slot />
  </span>
</HTMLTag>
